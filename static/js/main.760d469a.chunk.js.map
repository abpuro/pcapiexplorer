{"version":3,"sources":["components/Request.js","components/Response.js","components/Scenarios.js","components/History.js","components/LoginControl.js","App.js","serviceWorker.js","index.js","Config.js"],"names":["Request","props","runQuery","bind","handleInputChange","onChange","state","apiurlvalue","scope","config","scopes","operations","key","text","Styles","dropdown","width","accessToken","requestHeaders","loadclass","console","log","this","useragent","acquireTokenSilent","account","setState","errParts","split","length","message","debug","JSON","stringify","strheader","replace","header","parse","url","f_url","properties","callback","statusCode","fetch","method","f_operation","headers","Headers","then","response","json","responseJson","localStorage","getItem","history","toString","push","operation","timeStamp","Date","setItem","event","name","value","target","type","checked","ev","className","Toggle","label","defaultChecked","onText","offText","Dropdown","options","styles","dropdownStyles","item","id","defaultSelectedKey","TextField","prefix","ariaLabel","ref","c","title","PrimaryButton","onClick","allowDisabledFocus","Pivot","PivotItem","headerText","headerButtonProps","multiline","rows","inputClassName","undefined","Spinner","ariaLive","labelPosition","React","Response","messageBarTypeValue","MessageBarType","success","responseMessage","MessageBar","messageBarType","responseType","isMultiline","data","Component","Scenarios","showPanel","hidePanel","PanelShow","Link","Panel","isLightDismiss","isOpen","onDismiss","closeButtonAriaLabel","ChoiceGroup","disabled","required","clearHistory","History","ls_historydata","json_historydata","class","map","timestamp","alert","AuthItem","isAuthenticated","href","alt","user","email","displayName","authButtonMethod","LoginControl","App","updateResponse","userAgentApplication","UserAgentApplication","auth","clientId","appId","authority","cache","cacheLocation","storeAuthStateInCookie","getAccount","error","AccessToken","info","userName","loginPopup","prompt","getUserProfile","logout","code","dismissButtonAriaLabel","DefaultButton","login","Container","primarystate","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","appKey"],"mappings":"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","file":"static/js/main.760d469a.chunk.js","sourcesContent":["import * as React from 'react'; \nimport { Dropdown} from 'office-ui-fabric-react/lib/Dropdown';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { PrimaryButton } from 'office-ui-fabric-react';\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\nimport \"../styles/request.css\"\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\nimport { UserAgentApplication } from 'msal';\nimport { Toggle } from 'office-ui-fabric-react/lib/Toggle';\nimport config from '../Config';\nclass Request extends React.Component {\n  constructor(props) {\n    super(props)\n    // Binding the Methods \n    this.runQuery = this.runQuery.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.onChange = this.onChange.bind(this);\n    \n    // Inititalizing the State \n    this.state = {\n      apiurlvalue: \"https://api.partnercenter.microsoft.com/v1/\",\n      scope :config.scopes[1],\n      operations : [\n          { key: 'get', text: 'GET' },\n          { key: 'post', text: 'POST' }\n        ],\n        Styles : {\n        dropdown: { width: 10 } \n      },\n      accessToken:{}, \n      requestHeaders :  {\n        'Authorization':'Bearer <token>' ,\n        'Accept': 'application/json',\n        'client-request-id':'7391249f-cba0-467c-b026-7b3a60196422',\n        'Host': 'api.partner.microsoft.com',\n        // 'MS-CorrelationId':'98a091a0-67db-4eeb-ae0d-7e8b2e39c1d2',\n        // 'X-Locale':'en-US',\n        // 'Host': 'api.partnercenter.microsoft.com',\n        // 'Connection': 'Keep-Alive'\n        'Content-Type': 'application/json'\n      },\n      loadclass:\"request-none\",\n    }\n  }\n\n  // On button Click of Run Query \n  async runQuery ()\n  {\n  console.log(this.state.accessToken)\n    try {\n            \n      var accessToken = await this.props.useragent.acquireTokenSilent({\n        scopes: [this.state.scope],\n        \n      })\n      \n      if (accessToken) {\n        console.log(\"Hello\")\n      \n        var user = accessToken.account;\n        this.setState({\n          accessToken : accessToken\n        });\n      \n      }\n      \n    }\n    catch(err) {\n      var error = {};\n      if (typeof(err) === 'string') {\n        var errParts = err.split('|');\n        error = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: err };\n      } else {\n        error = {\n          message: err.message,\n          debug: JSON.stringify(err)\n        };\n      }\n\n    }\n \n   \n   var status =\"\";\n   var strheader =  JSON.stringify(this.state.requestHeaders).replace(\"<token>\",this.state.accessToken.accessToken);\n \n\n   var header = JSON.parse(strheader);\n   var url = this.state.apiurlvalue + this.state.f_url;\n   let properties = this.props;\n   properties.callback({\n    statusCode: \"fetching\"\n   })\n   this.setState({loadclass:\"request-load\"});\n   fetch( url, { \n    method: this.state.f_operation, \n    \n    headers: new Headers(header)\n    \n  }).then((response) => response.json())\n  .then((responseJson) => {\n    this.setState({loadclass:\"request-none\"});\n    properties.callback(responseJson);\n  })\n  var history; \n  if (localStorage.getItem(\"pcapihistory\") != null)\n  {\n    history = JSON.parse(localStorage.getItem(\"pcapihistory\").toString());\n  }\n  \n  if (history)\n  {\n        history.push({\n          operation : this.state.f_operation,\n          url : this.state.f_url,\n          timeStamp: new Date(),\n  }\n\n    );\n    \n  }\n  else\n  {\n    history = [{\n              operation : this.state.f_operation,\n              url : this.state.f_url,\n              timeStamp: new Date(),\n   \n            }]\n  }\n  localStorage.setItem('pcapihistory',JSON.stringify(history));\n\n  }\n\n  // Anytime the value changes in the Input button\n  handleInputChange(event) {\n    const target = event.target;\n    var name;\n    var value;\n    value = target.type === 'checkbox' ? target.checked : target.value;\n    \n    name = target.name;\n    this.setState({\n      [name]: value\n    });\n    \n  }\n\n  async onChange(ev,checked) {\n \n    if (checked)\n    {\n      this.setState(\n        {\n          apiurlvalue:\"https://api.partnercenter.microsoft.com/v1/\"\n        }\n      )\n      this.setState({scope :  config.scopes[1]});\n    }\n    else{\n      this.setState(\n        {\n          apiurlvalue:\"https://api.partner.microsoft.com/v1.0/\"\n        }\n        \n      )\n      this.setState({scope :  config.scopes[0]});\n    }\n    \n\n  }\n  \n  render() {\n    return (\n      <div className=\"request\">\n         <Toggle label=\"Switch Partner API and Partner Center API\" defaultChecked onText=\"Partner Center API\" offText=\"Partner API\" onChange={this.onChange} />\n        <div className=\"url\">\n          \n            <div>\n              <Dropdown options={this.state.operations} styles={this.state.dropdownStyles}      onChange={(ev, item) => this.setState({ [ev.target.id]: item.key\n    })} id=\"f_operation\" defaultSelectedKey=\"get\"/></div>\n            <div>\n              <TextField prefix={this.state.apiurlvalue} ariaLabel=\"Partner Center API for Normal, Germany and US Goverment\"  ref={(c) => this.title = c} onChange={this.handleInputChange} name=\"f_url\" className=\"urlfield\"/></div>\n            <div>\n              <PrimaryButton text=\"Run Query\" onClick={this.runQuery} allowDisabledFocus /> </div>\n        </div>\n        <div className=\"requestdetail\"> \n          <Pivot>\n            <PivotItem\n              headerText=\"Request Body\"\n              headerButtonProps={{\n                'data-order': 1,\n                'data-title': 'My Files Title'\n              }}\n            >\n              <TextField multiline rows={8}  inputClassName=\"requestdetail\" onChange={this.handleInputChange} name=\"f_requestBody\" />\n            </PivotItem>\n            <PivotItem headerText=\"Request Headers\"  inputClassName=\"requestdetail\">\n              <TextField  multiline rows={8} value={JSON.stringify(this.state.requestHeaders,undefined, 4)} onChange={this.handleInputChange} name=\"f_requestHeaders\" />\n            </PivotItem>\n          </Pivot>\n\n        </div>\n        <div className={this.state.loadclass}>\n        <Spinner label=\"Loading... Please wait...\" ariaLive=\"assertive\" labelPosition=\"top\" />\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default Request;\n    ","import React from 'react'; \nimport { Dropdown} from 'office-ui-fabric-react/lib/Dropdown';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { MessageBar, MessageBarType } from 'office-ui-fabric-react';\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\n\n\nimport \"../styles/request.css\"\nclass Response extends React.Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      operations : [\n        { key: 'get', text: 'GET' },\n        { key: 'post', text: 'POST' }\n      ],\n      Styles : {\n      dropdown: { width: 80 }\n     \n    },\n    messageBarTypeValue : MessageBarType.success,\n    responseMessage : \"Reponse Status will be reflected here\"\n    }\n    var messageBarTypeValue = MessageBarType.success;\n    // var messageText = \n   \n\n  }\n  render() {\n    return (\n      <div className=\"request\">\n      <div className=\"requestdetail\">\n      <MessageBar  messageBarType={this.props.responseType} isMultiline={false} >\n      {this.props.responseMessage}\n          </MessageBar>      \n      </div>\n      <div className=\"requestdetail\"> \n      <Pivot>\n      <PivotItem\n        headerText=\"Response Body\"\n        headerButtonProps={{\n          'data-order': 1,\n          'data-title': 'Response Body'\n        }}\n      >\n      <TextField multiline rows={8}  inputClassName=\"requestdetail\" value={JSON.stringify(this.props.data,undefined, 4)} className=\"responseText\"/>\n      </PivotItem>\n      <PivotItem headerText=\"Response  Headers\"  inputClassName=\"requestdetail\" >\n      <TextField  multiline rows={8}  value={JSON.stringify(this.props.data)} className=\"responseText\"/>\n      </PivotItem>\n        </Pivot>\n\n      </div>\n\n      </div>\n\n    );\n  }\n}\nfunction _alertClicked(){\n  alert('Clicked');\n}\nexport default Response;\n    ","import React from 'react'; \nimport { ActivityItem, Icon, Link, mergeStyleSets } from 'office-ui-fabric-react';\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\nimport { ChoiceGroup, IChoiceGroupOption } from 'office-ui-fabric-react/lib/ChoiceGroup';\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\nimport \"../styles/history.css\"\nclass Scenarios extends React.Component {\n  constructor() {\n    super()\n    this.showPanel = this.showPanel.bind(this);\n    this.hidePanel = this.hidePanel.bind(this);\nthis.state = {\n    PanelShow : false\n}\n\n}\n\nshowPanel() \n{\n    this.setState({PanelShow : true})\n}\n\nhidePanel() \n{\n    this.setState({PanelShow : false})\n}\n\n  \n  render() {\n    return (\n       <div className=\"history-outer\">\n          <div className=\"sidepanel-header\">\n              Manage Account and Profiles\n          </div>\n          <div className=\"history-inner\">\n           <Link className=\"history-inner-text\">Get the partner legal business profile</Link>\n           <Link className=\"history-inner-text\">Get an organization profile</Link>\n           <Link className=\"history-inner-text\">Get partner billing profile</Link>\n           <Link className=\"history-inner-text\">Get Microsoft Partner Network profile</Link>\n           <Link className=\"history-inner-text\">Get support profile</Link>\n           <Link className=\"history-inner-text\">Update the partner legal business profile</Link>\n           <Link className=\"history-inner-text\">Update the partner billing profile</Link>\n           <Link className=\"history-inner-text\">Update support profile</Link>\n           <Link className=\"history-inner-text\">Update an organization profile</Link>\n           <Link className=\"history-inner-text\">Verify a partner MPN ID</Link>\n           <Link className=\"history-inner-text\">Get a customer's subscriptions by partner MPN ID</Link>\n           <Link className=\"history-inner-text\">Get customers of an indirect reseller</Link>\n           <Link className=\"history-inner-text\">Get indirect resellers of a customer</Link>\n           <Link className=\"history-inner-text\">Retrieve a list of indirect resellers</Link>\n           </div>\n           <div>\n           <Link onClick={this.showPanel}\n               className=\"ms-MessageBar-innerText\"> Show more\n      </Link>\n           </div>\n           <Panel isLightDismiss isOpen={this.state.PanelShow} onDismiss={this.hidePanel} closeButtonAriaLabel=\"Close\" headerText=\"Partner Center Scenarios\">\n        <span>\n        <ChoiceGroup\n      className=\"defaultChoiceGroup\"\n      defaultSelectedKey=\"D\"\n      options={[\n        {\n          key: 'A',\n          text: 'Analytics',\n          disabled: true\n        },\n        {\n          key: 'B',\n          text: 'Device Deployment',\n          disabled: true\n        },\n        {\n          key: 'C',\n          text: 'Configuration policies',\n          disabled: true\n        },\n        {\n          key: 'D',\n          text: 'Manage accounts and profiles'\n        },\n        {\n          key: 'E',\n          text: 'Manage billing',\n          disabled: true\n        },\n        {\n          key: 'F',\n          text: 'Billing cycle',\n          disabled: true\n        },\n        {\n          key: 'G',\n          text: 'Invoices',\n          disabled: true\n        },\n        {\n          key: 'H',\n          text: 'Manage customer accounts',\n          disabled: true\n        },\n        {\n          key: 'I',\n          text: 'Manage orders',\n          disabled: true\n        },\n        {\n          key: 'J',\n          text: 'Provide support',\n          disabled: true\n        },\n        {\n          key: 'K',\n          text: 'Referrals',\n          disabled: true\n        },\n        {\n          key: 'L',\n          text: 'Utilities',\n          disabled: true\n        }\n      ]}\n      label=\"Select Scenario\"\n      required={true}\n    />\n\n        </span>\n      </Panel>\n\n\n      </div>\n    );\n}\n\n}\n\nexport default Scenarios;\n    ","import React from 'react'; \nimport {  Link, mergeStyleSets } from 'office-ui-fabric-react';\n\n\nimport \"../styles/history.css\"\nclass History extends React.Component {\n  constructor(props) {\n    super(props)\n    var ls_historydata = localStorage.getItem(\"pcapihistory\");\n    console.log(ls_historydata);\n    var json_historydata = null;\n    if (ls_historydata!=null) \n    {\n        json_historydata = JSON.parse(ls_historydata.toString());\n    }\n    console.log(json_historydata);\n   \n    \n    this.state = {\n    history : json_historydata    \n    }\n    console.log(this.state.history);\n}\n\n\n  render() {\n    return (\n      <div class=\"history-outer\">\n        <div class=\"history-inner\">\n      \n       { this.state.history!=null ? this.state.history.map((item) => (\n          <div key={item.timestamp} class=\"ms-MessageBar-innerText\">\n            <Link onClick={() => {\n                    alert('An @mentioned name was clicked.');\n                }}\n               className=\"history-link-text\">\n                <span class='get' >{item.operation}</span>                   \n               {item.url}\n               </Link>   \n           <div>\n           </div>\n           <div class=\"historytimestamp\">\n           {Date(item.timeStamp)}\n           </div>\n           <div>\n            &nbsp;\n            </div>\n\n           </div>\n      )):<div class=\"history-inner-text\">No History Found</div>}\n      </div>\n      <div>\n      \n      <Link onClick={clearHistory}\n               className=\"ms-MessageBar-innerText\"> Clear History\n      </Link>\n      </div>\n      </div>\n    );\n}\n\n}\n\nfunction clearHistory()\n{\n    localStorage.setItem('pcapihistory',null);\n}\n\nexport default History;\n    ","import React from 'react';\nfunction AuthItem(props) {\n  // If authenticated, return a dropdown with the user's info and a\n  // sign out button\n  if (props.isAuthenticated) {\n    return (\n    <div>\n     <a href=\"#\" alt={props.user.email}></a>{props.user.displayName} <span onClick={props.authButtonMethod}> (Sign Out)</span>\n    </div>\n        );\n  }\n  else{\n\n  // Not authenticated, return a sign in link\n  return (\n   <div onClick={props.authButtonMethod}>Sign In</div>\n  );\n}\n}\n\nexport default class LoginControl extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <AuthItem\n          isAuthenticated={this.props.isAuthenticated}\n          authButtonMethod={this.props.authButtonMethod}\n          user={this.props.user} />\n      </div>\n    );\n  }\n}","import React from 'react';\n\nimport './App.css';\nimport Request from \"./components/Request\"\nimport Response from \"./components/Response\"\nimport Scenarios from \"./components/Scenarios\"\nimport History from \"./components/History\"\nimport config from './Config';\nimport { UserAgentApplication } from 'msal';\nimport LoginControl from \"./components/LoginControl\"\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\n\nimport { MessageBar, MessageBarType ,DefaultButton} from 'office-ui-fabric-react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  this.updateResponse = this.updateResponse.bind(this);\n  this.userAgentApplication = new UserAgentApplication({\n          auth: {\n              clientId: config.appId,\n              authority: \"https://login.microsoftonline.com/common\"\n              \n          },\n          cache: {\n              cacheLocation: \"localStorage\",\n              storeAuthStateInCookie: true\n          }\n      });\n    var user = this.userAgentApplication.getAccount();\n\n    this.state = {\n        isAuthenticated: (user !== null),\n        user: {},\n        error: null,\n        AccessToken :'',\n        response : {\n         \n        },\n        messageBarTypeValue:  MessageBarType.info,\n        responseMessage : \"Reponse Status will be reflected here\"\n      };\n\n    if (user) {\n      // Enhance user object with data from Graph\n    \n\n      this.state = {\n        isAuthenticated: (user !== null),\n        user: {\n          displayName: user.name,\n          email: user.userName\n        },\n        error: null,\n        AccessToken :'',\n        response : {\n         \n        },\n        messageBarTypeValue:  MessageBarType.info,\n        responseMessage : \"Reponse Status will be reflected here\"\n      };\n \n      \n    }\n  }\n\n  async login() {\n    try {\n      await this.userAgentApplication.loginPopup(\n          {\n            prompt: \"select_account\", \n            scopes : config.scopes\n        });\n      await this.getUserProfile();\n    }\n    catch(err) {\n      var error = {};\n  \n      if (typeof(err) === 'string') {\n        var errParts = err.split('|');\n        error = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: err };\n      } else {\n        error = {\n          message: err.message,\n          debug: JSON.stringify(err)\n        };\n      }\n\n  \n      this.setState({\n        isAuthenticated: false,\n        user: {},\n        error: error,\n        AccessToken :''\n      });\n    }\n  }\n\n  logout() {\n    this.userAgentApplication.logout();\n  }\n\n\n  async getUserProfile() {\n    try {\n            \n      var accessToken = await this.userAgentApplication.acquireTokenSilent({\n        scopes: [config.scopes[1]],\n        \n      });\n      \n      if (accessToken) {\n      \n        var user = accessToken.account;\n        this.setState({\n          isAuthenticated: true,\n          user: {\n            displayName: user.name,\n            email: user.userName\n          },\n          error: null,\n          AccessToken : accessToken\n        });\n      }\n    }\n    catch(err) {\n      var error = {};\n      if (typeof(err) === 'string') {\n        var errParts = err.split('|');\n        error = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: err };\n      } else {\n        error = {\n          message: err.message,\n          debug: JSON.stringify(err)\n        };\n      }\n\n      this.setState({\n        isAuthenticated: false,\n        user: {},\n        error: error,\n        AccessToken : ''\n      });\n    }\n  }\n\n  updateResponse(data) {\n    this.setState({\n    response : data\n  })\n  \n  if(data.statusCode !=undefined)\n  {\n    this.setState({messageBarTypeValue:  MessageBarType.error,\n    responseMessage :data.statusCode + \" \" + data.message\n  })\n  }\n  \n  else\n  {\n\n    this.setState({messageBarTypeValue:  MessageBarType.success,\n      responseMessage : data.code + \" \" + data.message\n  });\n  }\n\n  }\n \n  render() {\n    let error = null;\n    if (this.state.error) {\n      error = <MessageBar messageBarType={MessageBarType.error} isMultiline={true} dismissButtonAriaLabel=\"Close\">\n     {this.state.error.message} \n     {this.state.error.debug}\n    \n    </MessageBar>\n      \n    }\n  \n    return (\n      <Router>\n            <div className=\"App\">\n        <div className=\"header\">\n        <div className=\"NavBar\">\n          <div className=\"logo ms-font-xl\">\n                \n            Partner Center API & Partner API Explorer\n          </div>\n\n          <DefaultButton href=\"https://github.com/abpuro/pcapiexplorer/issues/new\" target=\"_blank\" title=\"Help the Platofr\" >\n          Report a Bug  \n         </DefaultButton>\n          \n          <LoginControl  isAuthenticated={this.state.isAuthenticated}\n            authButtonMethod={this.state.isAuthenticated ? this.logout.bind(this) : this.login.bind(this)}\n            user={this.state.user}/>\n          </div>\n\n      \n        </div>\n        <Container>\n        {error}\n        <div className=\"body\">\n          <div className=\"content\">\n            <div className=\"query\">\n              \n            <Request primarystate={this.state} callback={this.updateResponse} useragent={this.userAgentApplication}></Request>\n            </div>\n            \n            <div className=\"response\"></div>\n            <Response  data={this.state.response} responseType={this.state.messageBarTypeValue} responseMessage={this.state.responseMessage}></Response>\n            </div>\n            <div className=\"sidebar\">\n            <Pivot>\n              <PivotItem\n                headerText=\"Scenarios\"\n                headerButtonProps={{\n                  'data-order': 1,\n                  'data-title': 'My Files Title'\n                }}\n              >\n                <Scenarios/>\n              </PivotItem>\n              <PivotItem headerText=\"History\"  inputClassName=\"requestdetail\">\n                <History/>\n              </PivotItem>\n            </Pivot>  \n            </div>      \n        </div>\n        </Container>            \n        </div>\n            \n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","  \nmodule.exports = {\n    appId: '29e5b139-6d72-4289-9028-c29517343e84',\n    appKey : 'ZFO0YRpRRSNONJ3XCeO1Y82JoZG7AEIk0whKUKT258I=',\n    scopes: [\n      \"https://api.partner.microsoft.com/user_impersonation\",\n      \"https://api.partnercenter.microsoft.com/user_impersonation\"\n    ]\n  };"],"sourceRoot":""}