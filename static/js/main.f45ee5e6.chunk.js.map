{"version":3,"sources":["logo.svg","components/Request.js","components/Response.js","components/Scenarios.js","components/History.js","components/LoginControl.js","App.js","serviceWorker.js","index.js","Config.js"],"names":["module","exports","Request","props","runQuery","history","strheader","JSON","stringify","state","requestHeaders","replace","primarystate","AccessToken","accessToken","header","parse","url","f_url","properties","setState","loadclass","fetch","method","f_operation","headers","Headers","then","response","json","responseJson","callback","localStorage","getItem","toString","console","log","push","operation","timeStamp","Date","setItem","bind","handleInputChange","operations","key","text","Styles","dropdown","width","event","name","value","target","type","checked","this","class","Dropdown","options","styles","dropdownStyles","onChange","ev","item","id","defaultSelectedKey","TextField","prefix","ariaLabel","ref","c","title","className","PrimaryButton","onClick","allowDisabledFocus","Pivot","PivotItem","headerText","headerButtonProps","multiline","rows","inputClassName","undefined","Spinner","label","ariaLive","labelPosition","React","Component","Response","messageBarTypeValue","MessageBarType","success","responseMessage","MessageBar","messageBarType","responseType","isMultiline","data","Scenarios","showPanel","hidePanel","PanelShow","Link","Panel","isLightDismiss","isOpen","onDismiss","closeButtonAriaLabel","ChoiceGroup","disabled","required","clearHistory","History","ls_historydata","json_historydata","map","timestamp","alert","AuthItem","isAuthenticated","href","alt","user","email","displayName","authButtonMethod","LoginControl","App","updateResponse","userAgentApplication","UserAgentApplication","auth","clientId","config","appId","authority","cache","cacheLocation","storeAuthStateInCookie","getAccount","error","info","body","getUserProfile","loginPopup","prompt","errParts","split","length","message","debug","logout","acquireTokenSilent","scopes","account","userName","statusCode","dismissButtonAriaLabel","login","Container","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","appKey"],"mappings":"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","file":"static/js/main.f45ee5e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react'; \nimport { Dropdown} from 'office-ui-fabric-react/lib/Dropdown';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { PrimaryButton } from 'office-ui-fabric-react';\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\nimport { ActivityItem, Link, mergeStyleSets } from 'office-ui-fabric-react';\nimport \"../styles/request.css\"\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Spinner, SpinnerSize } from 'office-ui-fabric-react/lib/Spinner';\n\n\nclass Request extends React.Component {\n  constructor(props) {\n    super(props)\n    // Binding the Methods \n    this.runQuery = this.runQuery.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n   \n    // Inititalizing the State \n    this.state = {\n        operations : [\n          { key: 'get', text: 'GET' },\n          { key: 'post', text: 'POST' }\n        ],\n        Styles : {\n        dropdown: { width: 10 } \n      }, \n      requestHeaders :  {\n        'Authorization':'Bearer <token>' ,\n        'Accept': 'application/json',\n        'MS-RequestId':'7391249f-cba0-467c-b026-7b3a60196422',\n        'MS-CorrelationId':'98a091a0-67db-4eeb-ae0d-7e8b2e39c1d2',\n        'X-Locale':'en-US',\n        'Host': 'api.partnercenter.microsoft.com',\n        'Connection': 'Keep-Alive'\n      },\n      loadclass:\"request-none\"\n    }\n  }\n\n  // On button Click of Run Query \n  runQuery = () =>\n  {\n \n   var status =\"\";\n   var strheader =  JSON.stringify(this.state.requestHeaders).replace(\"<token>\",this.props.primarystate.AccessToken.accessToken);\n   var header = JSON.parse(strheader);\n   var url = \"https://api.partnercenter.microsoft.com/v1\" + this.state.f_url;\n   let properties = this.props;\n   this.setState({loadclass:\"request-load\"});\n   fetch( url, { \n    method: this.state.f_operation, \n    headers: new Headers(header)\n    \n  }).then((response) => response.json())\n  .then((responseJson) => {\n    this.setState({loadclass:\"request-none\"});\n    properties.callback(responseJson);\n  });\n  var history; \n  if (localStorage.getItem(\"pcapihistory\") != null)\n  {\n    history = JSON.parse(localStorage.getItem(\"pcapihistory\").toString());\n  }\n  \n\n  console.log(history);\n  if (history)\n  {\n        history.push({\n          operation : this.state.f_operation,\n          url : this.state.f_url,\n          timeStamp: new Date(),\n  }\n\n    );\n    \n  }\n  else\n  {\n    history = [{\n              operation : this.state.f_operation,\n              url : this.state.f_url,\n              timeStamp: new Date(),\n   \n            }]\n  }\n  console.log(this.state.f_operation);\n  localStorage.setItem('pcapihistory',JSON.stringify(history));\n\n  }\n\n  // Anytime the value changes in the Input button\n  handleInputChange(event) {\n    const target = event.target;\n    var name;\n    var value;\n    value = target.type === 'checkbox' ? target.checked : target.value;\n    \n    name = target.name;\n    this.setState({\n      [name]: value\n    });\n    \n  }\n  \n  render() {\n    return (\n      <div class=\"request\">\n          \n\n        <div class=\"url\">\n            <div>\n              <Dropdown options={this.state.operations} styles={this.state.dropdownStyles}      onChange={(ev, item) => this.setState({ [ev.target.id]: item.key\n    })} id=\"f_operation\" defaultSelectedKey=\"get\"/></div>\n            <div>\n              <TextField prefix=\"https://api.partner.microsoft.com\" ariaLabel=\"Partner Center API for Normal, Germany and US Goverment\"  ref={(c) => this.title = c} onChange={this.handleInputChange} name=\"f_url\" className=\"urlfield\"/></div>\n            <div>\n              <PrimaryButton text=\"Run Query\" onClick={this.runQuery} allowDisabledFocus /> </div>\n        </div>\n        <div class=\"requestdetail\"> \n          <Pivot>\n            <PivotItem\n              headerText=\"Request Body\"\n              headerButtonProps={{\n                'data-order': 1,\n                'data-title': 'My Files Title'\n              }}\n            >\n              <TextField multiline rows={8}  inputClassName=\"requestdetail\" onChange={this.handleInputChange} name=\"f_requestBody\" />\n            </PivotItem>\n            <PivotItem headerText=\"Request Headers\"  inputClassName=\"requestdetail\">\n              <TextField  multiline rows={8} value={JSON.stringify(this.state.requestHeaders,undefined, 4)} onChange={this.handleInputChange} name=\"f_requestHeaders\" />\n            </PivotItem>\n          </Pivot>\n\n        </div>\n        <div class={this.state.loadclass}>\n        <Spinner label=\"Loading... Please wait...\" ariaLive=\"assertive\" labelPosition=\"top\" />\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default Request;\n    ","import React from 'react'; \nimport { Dropdown} from 'office-ui-fabric-react/lib/Dropdown';\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\nimport { MessageBar, MessageBarType } from 'office-ui-fabric-react';\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\n\n\nimport \"../styles/request.css\"\nclass Response extends React.Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      operations : [\n        { key: 'get', text: 'GET' },\n        { key: 'post', text: 'POST' }\n      ],\n      Styles : {\n      dropdown: { width: 80 }\n     \n    },\n    messageBarTypeValue : MessageBarType.success,\n    responseMessage : \"Reponse Status will be reflected here\"\n    }\n    var messageBarTypeValue = MessageBarType.success;\n    // var messageText = \n    try \n    {\n     \n        \n      }\n    \n    catch{\n      this.setState({messageBarTypeValue:  MessageBarType.info,\n      responseMessage : \"Reponse Status will be reflected here\"})\n    }\n\n  }\n  render() {\n    return (\n      <div class=\"request\">\n      <div class=\"requestdetail\">\n      <MessageBar  messageBarType={this.props.responseType} isMultiline={false} >\n      {this.props.responseMessage}\n          </MessageBar>      \n      </div>\n      <div class=\"requestdetail\"> \n      <Pivot>\n      <PivotItem\n        headerText=\"Response Body\"\n        headerButtonProps={{\n          'data-order': 1,\n          'data-title': 'Response Body'\n        }}\n      >\n      <TextField multiline rows={8}  inputClassName=\"requestdetail\" value={JSON.stringify(this.props.data,undefined, 4)} className=\"responseText\"/>\n      </PivotItem>\n      <PivotItem headerText=\"Response  Headers\"  inputClassName=\"requestdetail\" >\n      <TextField  multiline rows={8}  value={JSON.stringify(this.props.data)} className=\"responseText\"/>\n      </PivotItem>\n        </Pivot>\n\n      </div>\n\n      </div>\n\n    );\n  }\n}\nfunction _alertClicked(){\n  alert('Clicked');\n}\nexport default Response;\n    ","import React from 'react'; \nimport { ActivityItem, Icon, Link, mergeStyleSets } from 'office-ui-fabric-react';\nimport { Panel } from 'office-ui-fabric-react/lib/Panel';\nimport { ChoiceGroup, IChoiceGroupOption } from 'office-ui-fabric-react/lib/ChoiceGroup';\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\nimport \"../styles/history.css\"\nclass Scenarios extends React.Component {\n  constructor() {\n    super()\n    this.showPanel = this.showPanel.bind(this);\n    this.hidePanel = this.hidePanel.bind(this);\nthis.state = {\n    PanelShow : false\n}\n\n}\n\nshowPanel() \n{\n    this.setState({PanelShow : true})\n}\n\nhidePanel() \n{\n    this.setState({PanelShow : false})\n}\n\n  \n  render() {\n    return (\n       <div class=\"history-outer\">\n          <div class=\"sidepanel-header\">\n              Manage Account and Profiles\n          </div>\n          <div class=\"history-inner\">\n           <Link className=\"history-inner-text\">Get the partner legal business profile</Link>\n           <Link className=\"history-inner-text\">Get an organization profile</Link>\n           <Link className=\"history-inner-text\">Get partner billing profile</Link>\n           <Link className=\"history-inner-text\">Get Microsoft Partner Network profile</Link>\n           <Link className=\"history-inner-text\">Get support profile</Link>\n           <Link className=\"history-inner-text\">Update the partner legal business profile</Link>\n           <Link className=\"history-inner-text\">Update the partner billing profile</Link>\n           <Link className=\"history-inner-text\">Update support profile</Link>\n           <Link className=\"history-inner-text\">Update an organization profile</Link>\n           <Link className=\"history-inner-text\">Verify a partner MPN ID</Link>\n           <Link className=\"history-inner-text\">Get a customer's subscriptions by partner MPN ID</Link>\n           <Link className=\"history-inner-text\">Get customers of an indirect reseller</Link>\n           <Link className=\"history-inner-text\">Get indirect resellers of a customer</Link>\n           <Link className=\"history-inner-text\">Retrieve a list of indirect resellers</Link>\n           </div>\n           <div>\n           <Link onClick={this.showPanel}\n               className=\"ms-MessageBar-innerText\"> Show more\n      </Link>\n           </div>\n           <Panel isLightDismiss isOpen={this.state.PanelShow} onDismiss={this.hidePanel} closeButtonAriaLabel=\"Close\" headerText=\"Partner Center Scenarios\">\n        <span>\n        <ChoiceGroup\n      className=\"defaultChoiceGroup\"\n      defaultSelectedKey=\"D\"\n      options={[\n        {\n          key: 'A',\n          text: 'Analytics',\n          disabled: true\n        },\n        {\n          key: 'B',\n          text: 'Device Deployment',\n          disabled: true\n        },\n        {\n          key: 'C',\n          text: 'Configuration policies',\n          disabled: true\n        },\n        {\n          key: 'D',\n          text: 'Manage accounts and profiles'\n        },\n        {\n          key: 'E',\n          text: 'Manage billing',\n          disabled: true\n        },\n        {\n          key: 'F',\n          text: 'Billing cycle',\n          disabled: true\n        },\n        {\n          key: 'G',\n          text: 'Invoices',\n          disabled: true\n        },\n        {\n          key: 'H',\n          text: 'Manage customer accounts',\n          disabled: true\n        },\n        {\n          key: 'I',\n          text: 'Manage orders',\n          disabled: true\n        },\n        {\n          key: 'J',\n          text: 'Provide support',\n          disabled: true\n        },\n        {\n          key: 'K',\n          text: 'Referrals',\n          disabled: true\n        },\n        {\n          key: 'L',\n          text: 'Utilities',\n          disabled: true\n        }\n      ]}\n      label=\"Select Scenario\"\n      required={true}\n    />\n\n        </span>\n      </Panel>\n\n\n      </div>\n    );\n}\n\n}\n\nexport default Scenarios;\n    ","import React from 'react'; \nimport {  Link, mergeStyleSets } from 'office-ui-fabric-react';\n\n\nimport \"../styles/history.css\"\nclass History extends React.Component {\n  constructor(props) {\n    super(props)\n    var ls_historydata = localStorage.getItem(\"pcapihistory\");\n    console.log(ls_historydata);\n    var json_historydata = null;\n    if (ls_historydata!=null) \n    {\n        json_historydata = JSON.parse(ls_historydata.toString());\n    }\n    console.log(json_historydata);\n   \n    \n    this.state = {\n    history : json_historydata    \n    }\n    console.log(this.state.history);\n}\n\n\n  render() {\n    return (\n      <div class=\"history-outer\">\n        <div class=\"history-inner\">\n      \n       { this.state.history!=null ? this.state.history.map((item) => (\n          <div key={item.timestamp} class=\"ms-MessageBar-innerText\">\n            <Link onClick={() => {\n                    alert('An @mentioned name was clicked.');\n                }}\n               className=\"history-link-text\">\n                <span class='get' >{item.operation}</span>                   \n               {item.url}\n               </Link>   \n           <div>\n           </div>\n           <div class=\"historytimestamp\">\n           {Date(item.timeStamp)}\n           </div>\n           <div>\n            &nbsp;\n            </div>\n\n           </div>\n      )):<div class=\"history-inner-text\">No History Found</div>}\n      </div>\n      <div>\n      \n      <Link onClick={clearHistory}\n               className=\"ms-MessageBar-innerText\"> Clear History\n      </Link>\n      </div>\n      </div>\n    );\n}\n\n}\n\nfunction clearHistory()\n{\n    localStorage.setItem('pcapihistory',null);\n}\n\nexport default History;\n    ","import React from 'react';\nimport { NavLink as RouterNavLink } from 'react-router-dom';\nimport {\n  \n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem } from 'reactstrap';\n  import { Link } from 'office-ui-fabric-react/lib/Link';\n\nfunction UserAvatar(props) {\n  // If a user avatar is available, return an img tag with the pic\n  if (props.user.avatar) {\n    return <img\n            src={props.user.avatar} alt=\"user\"\n            className=\"rounded-circle align-self-center mr-2\"\n            style={{width: '32px'}}></img>;\n  }\n\n  // No avatar available, return a default icon\n  return <i\n          className=\"far fa-user-circle fa-lg rounded-circle align-self-center mr-2\"\n          style={{width: '32px'}}></i>;\n}\n\nfunction AuthItem(props) {\n  // If authenticated, return a dropdown with the user's info and a\n  // sign out button\n  if (props.isAuthenticated) {\n    return (\n    <div>\n     <a href=\"#\" alt={props.user.email}></a>{props.user.displayName} <span onClick={props.authButtonMethod}> (Sign Out)</span>\n    </div>\n        );\n  }\n  else{\n\n  // Not authenticated, return a sign in link\n  return (\n   <div onClick={props.authButtonMethod}>Sign In</div>\n  );\n}\n}\n\nexport default class LoginControl extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <AuthItem\n          isAuthenticated={this.props.isAuthenticated}\n          authButtonMethod={this.props.authButtonMethod}\n          user={this.props.user} />\n      </div>\n    );\n  }\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Request from \"./components/Request\"\nimport Response from \"./components/Response\"\nimport Scenarios from \"./components/Scenarios\"\nimport History from \"./components/History\"\nimport config from './Config';\nimport { UserAgentApplication } from 'msal';\nimport LoginControl from \"./components/LoginControl\"\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport { Pivot, PivotItem } from 'office-ui-fabric-react/lib/Pivot';\n\nimport { MessageBarButton, Link, Stack, StackItem, MessageBar, MessageBarType, ChoiceGroup, IStackProps } from 'office-ui-fabric-react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  this.updateResponse = this.updateResponse.bind(this);\n  this.userAgentApplication = new UserAgentApplication({\n          auth: {\n              clientId: config.appId,\n              authority: \"https://login.microsoftonline.com/common\"\n          },\n          cache: {\n              cacheLocation: \"localStorage\",\n              storeAuthStateInCookie: true\n          }\n      });\n    var user = this.userAgentApplication.getAccount();\n\n    this.state = {\n        isAuthenticated: (user !== null),\n        user: {},\n        error: null,\n        AccessToken :'',\n        response : {\n         \n        },\n        messageBarTypeValue:  MessageBarType.info,\n        responseMessage : \"Reponse Status will be reflected here\"\n      };\n\n    var user = this.userAgentApplication.getAccount();\n  \n    this.state = {\n      isAuthenticated: (user !== null),\n      user: {},\n      error: null,\n      AccessToken :'',\n      response : {\n        body :{}\n      }\n    };\n  \n    if (user) {\n      // Enhance user object with data from Graph\n      this.getUserProfile();\n    }\n  }\n\n  async login() {\n    try {\n      await this.userAgentApplication.loginPopup(\n          {\n            prompt: \"select_account\"\n        });\n      await this.getUserProfile();\n    }\n    catch(err) {\n      var error = {};\n  \n      if (typeof(err) === 'string') {\n        var errParts = err.split('|');\n        error = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: err };\n      } else {\n        error = {\n          message: err.message,\n          debug: JSON.stringify(err)\n        };\n      }\n\n  \n      this.setState({\n        isAuthenticated: false,\n        user: {},\n        error: error,\n        AccessToken :''\n      });\n    }\n  }\n\n  logout() {\n    this.userAgentApplication.logout();\n  }\n\n\n  async getUserProfile() {\n    try {\n            \n      var accessToken = await this.userAgentApplication.acquireTokenSilent({\n        scopes: config.scopes,\n        \n      });\n      console.log(accessToken);\n      if (accessToken) {\n      \n        var user = accessToken.account;\n        this.setState({\n          isAuthenticated: true,\n          user: {\n            displayName: user.name,\n            email: user.userName\n          },\n          error: null,\n          AccessToken : accessToken\n        });\n      }\n    }\n    catch(err) {\n      var error = {};\n      if (typeof(err) === 'string') {\n        var errParts = err.split('|');\n        error = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: err };\n      } else {\n        error = {\n          message: err.message,\n          debug: JSON.stringify(err)\n        };\n      }\n\n      this.setState({\n        isAuthenticated: false,\n        user: {},\n        error: error,\n        AccessToken : ''\n      });\n    }\n  }\n\n  updateResponse(data) {\n    this.setState({\n    response : data\n  })\n  console.log(data.statusCode);\n  if(data.statusCode !=undefined)\n  {\n    this.setState({messageBarTypeValue:  MessageBarType.error,\n    responseMessage :data.statusCode + \" \" + data.message\n  })\n  }\n  else\n  {\n\n    this.setState({messageBarTypeValue:  MessageBarType.success,\n      responseMessage : \"200\" + \" \" + \"Response below\"\n  });\n  }\n\n  }\n \n  render() {\n    let error = null;\n    if (this.state.error) {\n      error = <MessageBar messageBarType={MessageBarType.error} isMultiline={true} dismissButtonAriaLabel=\"Close\">\n     {this.state.error.message} \n     {this.state.error.debug}\n    \n    </MessageBar>\n      \n    }\n  \n    return (\n      <Router>\n            <div className=\"App\">\n        <div className=\"header\">\n        <div className=\"NavBar\">\n          <div className=\"logo ms-font-xl\">\n                \n            <strong>Partner Center API Explorer</strong>\n          </div>\n          <LoginControl  isAuthenticated={this.state.isAuthenticated}\n            authButtonMethod={this.state.isAuthenticated ? this.logout.bind(this) : this.login.bind(this)}\n            user={this.state.user}/>\n          </div>\n\n      \n        </div>\n        <Container>\n        {error}\n        <div className=\"body\">\n          <div className=\"content\">\n            <div class=\"query\">\n            <Request primarystate={this.state} callback={this.updateResponse}></Request>\n            </div>\n            \n            <div class=\"response\"></div>\n            <Response  data={this.state.response} responseType={this.state.messageBarTypeValue} responseMessage={this.state.responseMessage}></Response>\n            </div>\n            <div className=\"sidebar\">\n            <Pivot>\n              <PivotItem\n                headerText=\"Scenarios\"\n                headerButtonProps={{\n                  'data-order': 1,\n                  'data-title': 'My Files Title'\n                }}\n              >\n                <Scenarios/>\n              </PivotItem>\n              <PivotItem headerText=\"History\"  inputClassName=\"requestdetail\">\n                <History/>\n              </PivotItem>\n            </Pivot>  \n            </div>      \n        </div>\n        </Container>            \n        </div>\n            \n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","  \nmodule.exports = {\n  appId: '9ee9291b-3c9f-45fd-8e9e-10f3acdd8842',  \n  // appId: '29e5b139-6d72-4289-9028-c29517343e84',\n    appKey : 'V528IpwqkyrF8.5_w4~TLN_5e9hYIQwP_Y',\n    scopes: [\n      \"https://api.partner.microsoft-int.com/user_impersonation\",\n      \n    ]\n  };"],"sourceRoot":""}